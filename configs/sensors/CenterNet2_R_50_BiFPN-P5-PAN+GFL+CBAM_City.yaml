_BASE_: "../Base-CenterNet2.yaml"
MODEL:
  META_ARCHITECTURE: "GeneralizedRCNN"
  BACKBONE:
    NAME: "MY_build_p37_fcos_resnet_bifpn_pan_cbam_backbone"
  PROPOSAL_GENERATOR:
    NAME: "MY_GFLModule"
  BIFPN:
    OUT_CHANNELS: 160
    NUM_LEVELS: 5
    NUM_BIFPN: 3
  RESNETS:
    DEPTH: 50
    OUT_FEATURES: ["res3", "res4", "res5"]
  WEIGHTS: "detectron2://COCO-InstanceSegmentation/mask_rcnn_R_50_FPN_3x/137849600/model_final_f10217.pkl"
  FPN:
    IN_FEATURES: ["res3", "res4", "res5"]
  ROI_HEADS:
    IN_FEATURES: ["p3", "p4", "p5", "p6", "p7"]
    NUM_CLASSES: 8
  CENTERNET:
    IN_FEATURES: ["p3", "p4", "p5", "p6", "p7"]
    POST_NMS_TOPK_TEST: 128
    FPN_STRIDES: [8, 16, 32, 64, 128]
    SOI: [[0, 80], [64, 160], [128, 320], [256, 640], [512, 10000000]]
  MASK_ON: True
# This is similar to the setting used in Mask R-CNN paper, Appendix A
# But there are some differences, e.g., we did not initialize the output
# layer using the corresponding classes from COCO
DATASETS:
  TRAIN: ("cityscapes_fine_instance_seg_train",)
  TEST: ("cityscapes_fine_instance_seg_val",)
SOLVER:
  IMS_PER_BATCH: 16
  BASE_LR: 0.02
  STEPS: (300000, 340000)
  MAX_ITER: 360000
  CHECKPOINT_PERIOD: 50000
  LR_SCHEDULER_NAME: "WarmupCosineLR"
  WARMUP_ITERS: 4000
  WARMUP_FACTOR: 0.00025
TEST:
  EVAL_PERIOD: 8000
INPUT:
  MIN_SIZE_TRAIN: (800, 832, 864, 896, 928, 960, 992, 1024)
  MIN_SIZE_TRAIN_SAMPLING: "choice"
  MIN_SIZE_TEST: 1024
  MAX_SIZE_TRAIN: 2048
  MAX_SIZE_TEST: 2048
